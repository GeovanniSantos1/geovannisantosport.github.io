{"ast":null,"code":"import useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\nimport { off, on } from './misc/util';\n\nvar isFocusedElementEditable = function isFocusedElementEditable() {\n  var activeElement = document.activeElement,\n      body = document.body;\n\n  if (!activeElement) {\n    return false;\n  } // If not element has focus, we assume it is not editable, too.\n\n\n  if (activeElement === body) {\n    return false;\n  } // Assume <input> and <textarea> elements are editable.\n\n\n  switch (activeElement.tagName) {\n    case 'INPUT':\n    case 'TEXTAREA':\n      return true;\n  } // Check if any other focused element id editable.\n\n\n  return activeElement.hasAttribute('contenteditable');\n};\n\nvar isTypedCharGood = function isTypedCharGood(_a) {\n  var keyCode = _a.keyCode,\n      metaKey = _a.metaKey,\n      ctrlKey = _a.ctrlKey,\n      altKey = _a.altKey;\n\n  if (metaKey || ctrlKey || altKey) {\n    return false;\n  } // 0...9\n\n\n  if (keyCode >= 48 && keyCode <= 57) {\n    return true;\n  } // a...z\n\n\n  if (keyCode >= 65 && keyCode <= 90) {\n    return true;\n  } // All other keys.\n\n\n  return false;\n};\n\nvar useStartTyping = function useStartTyping(onStartTyping) {\n  useIsomorphicLayoutEffect(function () {\n    var keydown = function keydown(event) {\n      !isFocusedElementEditable() && isTypedCharGood(event) && onStartTyping(event);\n    };\n\n    on(document, 'keydown', keydown);\n    return function () {\n      off(document, 'keydown', keydown);\n    };\n  }, []);\n};\n\nexport default useStartTyping;","map":{"version":3,"names":["useIsomorphicLayoutEffect","off","on","isFocusedElementEditable","activeElement","document","body","tagName","hasAttribute","isTypedCharGood","_a","keyCode","metaKey","ctrlKey","altKey","useStartTyping","onStartTyping","keydown","event"],"sources":["C:/Users/Geovanni Santos/Downloads/portfolio/portfolioweb/geovannisantosport.github.io/node_modules/react-use/esm/useStartTyping.js"],"sourcesContent":["import useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\r\nimport { off, on } from './misc/util';\r\nvar isFocusedElementEditable = function () {\r\n    var activeElement = document.activeElement, body = document.body;\r\n    if (!activeElement) {\r\n        return false;\r\n    }\r\n    // If not element has focus, we assume it is not editable, too.\r\n    if (activeElement === body) {\r\n        return false;\r\n    }\r\n    // Assume <input> and <textarea> elements are editable.\r\n    switch (activeElement.tagName) {\r\n        case 'INPUT':\r\n        case 'TEXTAREA':\r\n            return true;\r\n    }\r\n    // Check if any other focused element id editable.\r\n    return activeElement.hasAttribute('contenteditable');\r\n};\r\nvar isTypedCharGood = function (_a) {\r\n    var keyCode = _a.keyCode, metaKey = _a.metaKey, ctrlKey = _a.ctrlKey, altKey = _a.altKey;\r\n    if (metaKey || ctrlKey || altKey) {\r\n        return false;\r\n    }\r\n    // 0...9\r\n    if (keyCode >= 48 && keyCode <= 57) {\r\n        return true;\r\n    }\r\n    // a...z\r\n    if (keyCode >= 65 && keyCode <= 90) {\r\n        return true;\r\n    }\r\n    // All other keys.\r\n    return false;\r\n};\r\nvar useStartTyping = function (onStartTyping) {\r\n    useIsomorphicLayoutEffect(function () {\r\n        var keydown = function (event) {\r\n            !isFocusedElementEditable() && isTypedCharGood(event) && onStartTyping(event);\r\n        };\r\n        on(document, 'keydown', keydown);\r\n        return function () {\r\n            off(document, 'keydown', keydown);\r\n        };\r\n    }, []);\r\n};\r\nexport default useStartTyping;\r\n"],"mappings":"AAAA,OAAOA,yBAAP,MAAsC,6BAAtC;AACA,SAASC,GAAT,EAAcC,EAAd,QAAwB,aAAxB;;AACA,IAAIC,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAY;EACvC,IAAIC,aAAa,GAAGC,QAAQ,CAACD,aAA7B;EAAA,IAA4CE,IAAI,GAAGD,QAAQ,CAACC,IAA5D;;EACA,IAAI,CAACF,aAAL,EAAoB;IAChB,OAAO,KAAP;EACH,CAJsC,CAKvC;;;EACA,IAAIA,aAAa,KAAKE,IAAtB,EAA4B;IACxB,OAAO,KAAP;EACH,CARsC,CASvC;;;EACA,QAAQF,aAAa,CAACG,OAAtB;IACI,KAAK,OAAL;IACA,KAAK,UAAL;MACI,OAAO,IAAP;EAHR,CAVuC,CAevC;;;EACA,OAAOH,aAAa,CAACI,YAAd,CAA2B,iBAA3B,CAAP;AACH,CAjBD;;AAkBA,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAAUC,EAAV,EAAc;EAChC,IAAIC,OAAO,GAAGD,EAAE,CAACC,OAAjB;EAAA,IAA0BC,OAAO,GAAGF,EAAE,CAACE,OAAvC;EAAA,IAAgDC,OAAO,GAAGH,EAAE,CAACG,OAA7D;EAAA,IAAsEC,MAAM,GAAGJ,EAAE,CAACI,MAAlF;;EACA,IAAIF,OAAO,IAAIC,OAAX,IAAsBC,MAA1B,EAAkC;IAC9B,OAAO,KAAP;EACH,CAJ+B,CAKhC;;;EACA,IAAIH,OAAO,IAAI,EAAX,IAAiBA,OAAO,IAAI,EAAhC,EAAoC;IAChC,OAAO,IAAP;EACH,CAR+B,CAShC;;;EACA,IAAIA,OAAO,IAAI,EAAX,IAAiBA,OAAO,IAAI,EAAhC,EAAoC;IAChC,OAAO,IAAP;EACH,CAZ+B,CAahC;;;EACA,OAAO,KAAP;AACH,CAfD;;AAgBA,IAAII,cAAc,GAAG,SAAjBA,cAAiB,CAAUC,aAAV,EAAyB;EAC1ChB,yBAAyB,CAAC,YAAY;IAClC,IAAIiB,OAAO,GAAG,SAAVA,OAAU,CAAUC,KAAV,EAAiB;MAC3B,CAACf,wBAAwB,EAAzB,IAA+BM,eAAe,CAACS,KAAD,CAA9C,IAAyDF,aAAa,CAACE,KAAD,CAAtE;IACH,CAFD;;IAGAhB,EAAE,CAACG,QAAD,EAAW,SAAX,EAAsBY,OAAtB,CAAF;IACA,OAAO,YAAY;MACfhB,GAAG,CAACI,QAAD,EAAW,SAAX,EAAsBY,OAAtB,CAAH;IACH,CAFD;EAGH,CARwB,EAQtB,EARsB,CAAzB;AASH,CAVD;;AAWA,eAAeF,cAAf"},"metadata":{},"sourceType":"module"}